{"version":3,"sources":["Predict.js"],"names":["Predict","data","echarts","option","legend","grid","top","bottom","xAxis","type","axisTick","alignWithLabel","axisLine","onZero","lineStyle","axisLabel","show","textStyle","fontSize","interval","rotate","yAxis","series","name","smooth","itemStyle","normal","width","predict","truedata","lazyUpdate","onEvents","click","e","style","height"],"mappings":"8FAAA,kFAqGeA,UA5Ff,YAA6B,IAATC,EAAQ,EAARA,KA6ElB,OACE,kBAAC,IAAD,CACEC,QAASA,IACTC,OA7EK,CASLC,OAAQ,CACJH,KAAMA,EAAKG,QAEfC,KAAM,CACFC,IAAK,GACLC,OAAQ,IAEZC,MAAO,CACH,CACIC,KAAM,WACNC,SAAU,CACNC,gBAAgB,GAEpBC,SAAU,CACNC,QAAQ,EACRC,UAAW,IAIfC,UAAW,CACTC,MAAM,EACLC,UAAW,CACTC,SAAW,GAEbC,SAAU,EACVC,OAAQ,IAEXnB,KAAMA,EAAKO,QAGnBa,MAAO,CACH,CACIZ,KAAM,QACNM,UAAW,CACTC,MAAM,EACLC,UAAW,CACTC,SAAW,MAKxBI,OAAQ,CACJ,CACIC,KAAMtB,EAAKG,OAAO,GAClBK,KAAM,OACNe,QAAQ,EACRC,UAAU,CACNC,OAAO,CACHZ,UAAU,CACNa,MAAM,EACNlB,KAAK,YAIjBR,KAAMA,EAAK2B,SAEf,CACIL,KAAMtB,EAAKG,OAAO,GAClBK,KAAM,OACNe,QAAQ,EACRvB,KAAMA,EAAK4B,YASnBC,YAAY,EACZC,SAAU,CACRC,MADQ,SACDC,MAITC,MAAO,CAACC,OAAQ","file":"gb/static/js/6.ecfd10c4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactEcharts from 'echarts-for-react/lib/core'\nimport echarts from 'echarts/lib/echarts'\n\n// import 'echarts/lib/chart/map'\nimport 'echarts/lib/component/visualMap'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/legend'\n\nfunction Predict ({ data }) {\n\n  const getOption = () => {\n    return {\n      // color: colors,\n\n      // tooltip: {\n      //     trigger: 'none',\n      //     axisPointer: {\n      //         type: 'cross'\n      //     }\n      // },\n      legend: {\n          data: data.legend\n      },\n      grid: {\n          top: 30,\n          bottom: 50\n      },\n      xAxis: [\n          {\n              type: 'category',\n              axisTick: {\n                  alignWithLabel: true\n              },\n              axisLine: {\n                  onZero: false,\n                  lineStyle: {\n                      // color: colors[1]\n                  }\n              },\n              axisLabel: {\n                show: true,\n                 textStyle: {\n                   fontSize : 6      //更改坐标轴文字大小\n                 },\n                 interval: 0,\n                 rotate: 60,\n              },\n              data: data.xAxis\n          }\n      ],\n      yAxis: [\n          {\n              type: 'value',\n              axisLabel: {\n                show: true,\n                 textStyle: {\n                   fontSize : 6      //更改坐标轴文字大小\n                 }\n              },\n          }\n      ],\n      series: [\n          {\n              name: data.legend[1],\n              type: 'line',\n              smooth: true,\n              itemStyle:{\n                  normal:{\n                      lineStyle:{\n                          width:2,\n                          type:'dotted'  //'dotted'虚线 'solid'实线\n                      }\n                  }\n              }, \n              data: data.predict\n          },\n          {\n              name: data.legend[0],\n              type: 'line',\n              smooth: true,\n              data: data.truedata\n          }\n      ]\n    }\n  }\n  return (\n    <ReactEcharts\n      echarts={echarts}\n      option={getOption()}\n      lazyUpdate={true}\n      onEvents={{\n        click (e) {\n          // onClick(e.name)\n        }\n      }}\n      style={{height: \"200px\"}}\n    />\n  )\n}\n\nexport default Predict\n"],"sourceRoot":""}